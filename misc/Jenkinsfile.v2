node {
   def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('test') {
     withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_TOKEN')]) {
       sh 'echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USER --password-stdin'
       def myTestContainer = docker.image('node:16')
       myTestContainer.pull()
       myTestContainer.inside {
          sh 'npm install --only=dev'
          sh 'npm test'
     }
   }
   }
   stage('test with a DB') {
      withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_TOKEN')]) {
        sh 'echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USER --password-stdin'
        def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes") 
        def myTestContainer = docker.image('node:16')
        myTestContainer.pull()
        myTestContainer.inside("--link ${mysql.id}:mysql") { // using linking, mysql will be available at host: mysql, port: 3306
             sh 'npm install --only=dev' 
             sh 'npm test'                     
     }                                   
     mysql.stop()
   }   
   }
   stage('docker build/push') {    
      withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_TOKEN')]) {
        sh 'echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USER --password-stdin docker.io'
         echo "Building image: dev1980/devcharles:${commit_id}"
        docker.image("dev1980/devcharles:${commit_id}").push()
     }                                     
   }   
   }
}     

                                        
